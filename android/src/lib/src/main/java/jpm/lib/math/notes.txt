******* Ponto pertence a linha:

Se a linha for definida por 2 pontos A e B

L(t) = (1-t) * A + t * B      -inf < t < +inf

se tivermos o ponto P

(1-t) * A + t * B = P   para um determinado t

=>
(1-t) * A.x + t * B.x = P.x
(1-t) * A.y + t * B.y = P.y

=>  A.x - t * A.x + t * B.x = P.x
=>  A.x + t(B.x - A.x) = P.x
=>
t = (P.x - A.x) / (B.x - A.x)
t = (P.y - A.y) / (B.y - A.y)
=>
(P.x - A.x) / (B.x - A.x) = (P.y - A.y) / (B.y - A.y)
=>
(P.x - A.x) * (B.y - A.y) = (B.x - A.x) * (P.y - A.y)

Ou seja P pertence à linha se

(P.x - A.x) * (B.y - A.y) = (B.x - A.x) * (P.y - A.y)


** Para P pertencer ao segmento de recta A B, =>    0  <= t <= 1

Se a recta for vertical => A.x = B.x

P pertence ao segmento se:
 A.x = P.x AND min(A.y,B.y) <= P.y <= max(A.y,B.y)

Se a recta for horizonatl => A.y = B.y

P pertence ao segmento se:
 A.y = P.y AND min(A.x,B.x) <= P.x <= max(A.x,B.x)

No caso geral (contempla os casos particulares):

P pertence ao segmento se:
(P.x - A.x) * (B.y - A.y) = (B.x - A.x) * (P.y - A.y) AND
min(A.x,B.x) <= P.x <= max(A.x,B.x)                   AND
min(A.y,B.y) <= P.y <= max(A.y,B.y)

Outra maneira alternativa é: **********************

seja:
v = B - A  o vector com a direção e tamanho do segmento

então:

L(t) = A + t * v      -inf < t < +inf

se tivermos o ponto P

A + t * v = P   para um determinado t

=>
A.x + t * v.x = P.x
A.y + t * v.y = P.y

=>
t = (P.x - A.x) / v.x
t = (P.y - A.y) / v.y
=>
(P.x - A.x) / v.x = (P.y - A.y) / v.y
=>
(P.x - A.x) * v.y = (P.y - A.y) * v.x

Ou seja P pertence à linha se

(P.x - A.x) * v.y = (P.y - A.y) * v.x

** Para P pertencer ao segmento de recta A B, =>    0  <= t <= 1

Se a recta for vertical => v.x = 0

P pertence ao segmento se:
 A.x = P.x AND min(A.y,A.y + v.y) <= P.y <= max(A.y,A.y + v.y)

Se a recta for horizonatl => v.y = 0

P pertence ao segmento se:
 A.y = P.y AND min(A.x,A.x + v.x) <= P.x <= max(A.x,A.x + v.x)

No caso geral (contempla os casos particulares):

P pertence ao segmento se:
(P.x - A.x) * v.y = (P.y - A.y) * v.x             AND
min(A.x,A.x + v.x) <= P.x <= max(A.x,A.x + v.x)   AND
min(A.y,A.y + v.y) <= P.y <= max(A.y,A.y + v.y)



******* Intersecção de 2 linhas

Se cada linha for definida por 2 pontos A e B

seja:
v = B - A  o vector com a direção e tamanho do segmento

então:

L1(t1) = A1 + t1 * v1      -inf < t1 < +inf
L2(t2) = A2 + t2 * v2      -inf < t2 < +inf

Para se intersectarem tem de haver um ponto P pertencente a ambas as linhas tal que:
(P.x - A1.x) * v1.y = (P.y - A1.y) * v1.x  AND
(P.x - A2.x) * v2.y = (P.y - A2.y) * v2.x

usando wxmaxima: solve([(P_x - A1_x) * v1_y = (P_y - A1_y) * v1_x, (P_x - A2_x) * v2_y = (P_y - A2_y) * v2_x],[P_x,P_y]);

para A1B1 vertical, v1.x = 0 e v1.y = (B1.y - A1.y) => ********************************
(P.x - A1.x) * (B1.y - A1.y) = 0  AND
(P.x - A2.x) * v2.y = (P.y - A2.y) * v2.x

usando wxmaxima: solve([(P_x - A1_x) * (B1_y - A1_y) = 0, (P_x - A2_x) * v2_y = (P_y - A2_y) * v2_x],[P_x,P_y]);

P.x = A1.x
P.y = (v2.y * (A1.x -A2.x) + A2.y * v2.x) / v2.x

para A1B1 horizontal v1.y = 0 e  v1.x = (B1.x - B1.y) => *****************************
0 = (P.y - A1.y) * (B1.x - B1.y)  AND
(P.x - A2.x) * v2.y = (P.y - A2.y) * v2.x

usando wxmaxima: solve([0 = (P_y - A1_y) * (B1_x - B1_y), (P_x - A2_x) * v2_y = (P_y - A2_y) * v2_x],[P_x,P_y]);

P.x = (A2.x * v2.y + v2.x * (A1.y - A2.y)) / v2.y
P.y = A1.y

=>
P.x = (v1.x * (-A2.x * v2.y + A2.y * v2.x - A1.y * v2.x) + A1.x * v1.y * v2.x) / (v1.y * v2.x - v1.x * v2.y) AND
P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x) - A1.y * v1.x * v2.y) / (v1.y * v2.x - v1.x * v2.y)

Vamos considerar sempre o caso de A1 != A2 ou seja os 2 pontos que definem uma recta são diferentes

Podemos ter as seguintes situações:

1 - A1 B1 vertical   AND A2 B2 vertical
2 - A1 B1 vertical   AND A2 B2 horizontal
3 - A1 B1 vertical   AND A2 B2 outra
4 - A1 B1 horizontal AND A2 B2 vertical
5 - A1 B1 horizontal AND A2 B2 horizontal
6 - A1 B1 horizontal AND A2 B2 outra
7 - A1 B1 outra      AND A2 B2 vertical
8 - A1 B1 outra      AND A2 B2 horizontal
9 - A1 B1 outra      AND A2 B2 outra


seja:
     maxA1B1.x = max(A1.x, B1.x)
     minA1B1.x = min(A1.x, B1.x)

     maxA1B1.y = max(A1.y, B1.y)
     minA1B1.y = min(A1.y, B1.y)

     maxA2B2.x = max(A2.x, B2.x)
     minA2B2.x = min(A2.x, B2.x)

     maxA2B2.y = max(A2.y, B2.y)
     minA2B2.y = min(A2.y, B2.y)

     v1 = B1 - A1
     v2 = B2 - A2

1 - A1 B1 vertical   AND A2 B2 vertical  ****************

    Só se intersectam se (mas não é suficiente): A1.x = B1.x = A2.x = B2.x

    P.x = A1.x
    P.y =
       if     (maxA1B1.y >= maxA2B2.y &&  minA1B1.y >= minA2B2.y) maxA2B2.y
       else if(maxA2B2.y >= maxA1B1.y &&  minA2B2.y >= minA1B1.y) maxA1B1.y
       else  não existe intersecção

2 - A1 B1 vertical   AND A2 B2 horizontal  ****************

    A1.x = B1.x AND A2.y = B2.Y

    Só se intersectam se: maxA1B1.y >= A2.y AND minA1B1.y <= A2.y  AND maxA2B2.x >= A1.x AND minA2B2.x <= A1.x

    P.x = A1.x
    P.y = A2.y

3 - A1 B1 vertical   AND A2 B2 outra

    A1.x = B1.x AND v1.x = 0 AND minA2B2.x <= A1.x <= maxA2B2.x

    então:
        P.x = (v1.x * (-A2.x * v2.y + A2.y * v2.x - A1.y * v2.x) + A1.x * v1.y * v2.x) / (v1.y * v2.x - v1.x * v2.y) AND
        P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x) - A1.y * v1.x * v2.y) / (v1.y * v2.x - v1.x * v2.y)

        P.x = A1.x
        P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x)) / (v1.y * v2.x)

        P.y tem de: minA1B1.y <= P.y <= maxA1B1.y AND minA2B2.y <= P.y <= maxA2B2.y

4 - A1 B1 horizontal AND A2 B2 vertical

    A1.y = B1.y AND A2.x = B2.x

    Só se intersectam se: maxA2B2.y >= A1.y AND minA2B2.y <= A1.y  AND maxA1B1.x >= A2.x AND minA2B2.x <= A2.x

    P.x = A2.x
    P.y = A1.y


5 - A1 B1 horizontal AND A2 B2 horizontal

    Só se intersectam se (mas não é suficiente): A1.y = B1.y = A2.y = B2.y

    P.x =
       if     (maxA1B1.x >= maxA2B2.x &&  minA1B1.x >= minA2B2.x) maxA2B2.x
       else if(maxA2B2.x >= maxA1B1.x &&  minA2B2.x >= minA1B1.x) maxA1B1.x
       else  não existe intersecção
    P.y = A1.y

6 - A1 B1 horizontal AND A2 B2 outra

    A1.y = B1.y AND v1.y = 0 AND minA2B2.y <= A1.y <= maxA2B2.y

    então:
        P.x = (v1.x * (-A2.x * v2.y + A2.y * v2.x - A1.y * v2.x) + A1.x * v1.y * v2.x) / (v1.y * v2.x - v1.x * v2.y) AND
        P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x) - A1.y * v1.x * v2.y) / (v1.y * v2.x - v1.x * v2.y)

        P.x = (v1.x * (-A2.x * v2.y + v2.x * (A2.y - A1.y))) / (- v1.x * v2.y) =
              ((B1.x - A1.x) * (-A2.x * v2.y + v2.x * (A2.y - A1.y))) / (- (B1.x - A1.x) * v2.y)
        P.y = A1.y

        P.x tem de: minA1B1.x <= P.x <= maxA1B1.x AND minA2B2.x <= P.x <= maxA2B2.x

7 - A1 B1 outra      AND A2 B2 vertical

    A2.x = B2.x AND v2.x = 0 AND minA1B1.x <= A2.x <= maxA1B1.x

    então:
        P.x = (v1.x * (-A2.x * v2.y + A2.y * v2.x - A1.y * v2.x) + A1.x * v1.y * v2.x) / (v1.y * v2.x - v1.x * v2.y) AND
        P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x) - A1.y * v1.x * v2.y) / (v1.y * v2.x - v1.x * v2.y)

        P.x = A2.x
        P.y = ( v2.y * (v1.y * (-A2.x + A1.x) - A1.y * v1.x)) / (- v1.x * v2.y)

        P.y tem de: minA1B1.y <= P.y <= maxA1B1.y AND minA2B2.y <= P.y <= maxA2B2.y

8 - A1 B1 outra      AND A2 B2 horizontal

    A2.y = B2.y AND v2.y = 0 AND minA1B1.y <= A2.y <= maxA1B1.y

    então:
        P.x = (v1.x * (-A2.x * v2.y + A2.y * v2.x - A1.y * v2.x) + A1.x * v1.y * v2.x) / (v1.y * v2.x - v1.x * v2.y) AND
        P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x) - A1.y * v1.x * v2.y) / (v1.y * v2.x - v1.x * v2.y)

        P.x = (v2.x * (v1.x * (A2.y - A1.y) + A1.x * v1.y)) / (v1.y * v2.x) AND
        P.y = A2.y

        P.x tem de: minA1B1.x <= P.x <= maxA1B1.x AND minA2B2.x <= P.x <= maxA2B2.x

9 - A1 B1 outra      AND A2 B2 outra

        P.x = (v1.x * (-A2.x * v2.y + A2.y * v2.x - A1.y * v2.x) + A1.x * v1.y * v2.x) / (v1.y * v2.x - v1.x * v2.y) AND
        P.y = (v1.y * (-A2.x * v2.y + A1.x * v2.y + A2.y * v2.x) - A1.y * v1.x * v2.y) / (v1.y * v2.x - v1.x * v2.y)

        P.x tem de: minA1B1.x <= P.x <= maxA1B1.x AND minA2B2.x <= P.x <= maxA2B2.x
        P.y tem de: minA1B1.y <= P.y <= maxA1B1.y AND minA2B2.y <= P.y <= maxA2B2.y
